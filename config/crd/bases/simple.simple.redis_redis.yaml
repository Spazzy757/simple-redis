---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: redis.simple.simple.redis
spec:
  group: simple.simple.redis
  names:
    kind: Redis
    listKind: RedisList
    plural: redis
    singular: redis
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Redis is the Schema for the redis API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RedisSpec defines the desired state of Redis
            properties:
              clusterSize:
                description: ClusterSize determines the amount of redis instances
                  running
                type: integer
              databases:
                description: Set the number of databases. The default database is
                  DB 0, you can select a different one on a per-connection basis using
                  SELECT <dbid> where dbid is a number between 0 and 'databases'-1
                type: integer
              logLevel:
                description: 'LogLevel specifies the redis verbosity level. This can
                  be one of: debug (a lot of information, useful for development/testing)
                  verbose (many rarely useful info, but not a mess like the debug
                  level) notice (moderately verbose, what you want in production probably)
                  warning (only very important / critical messages are logged)'
                type: string
            type: object
          status:
            description: RedisStatus defines the observed state of Redis
            properties:
              master:
                description: master pod name
                type: string
              status:
                description: status of redis cluster
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
